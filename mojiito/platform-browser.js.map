{"version":3,"file":"platform-browser.js","sources":["../../../../packages/platform-browser/index.ts","../../../../packages/platform-browser/public_api.ts","../../../../packages/platform-browser/src/platform-browser.ts","../../../../packages/platform-browser/src/dom_renderer.ts","../../../../packages/platform-browser/src/dom_traverser.ts","../../../../packages/platform-browser/src/tokens.ts","../../../../packages/platform-browser/src/platform_ref.ts","../../../../packages/platform-browser/src/compiler/compiler.ts","../../../../packages/platform-browser/src/binding_parser.ts","../../../../packages/platform-browser/src/expression/expression.ts","../../../../packages/platform-browser/src/expression/expression_parser.ts","../../../../packages/platform-browser/src/chars.ts","../../../../packages/platform-browser/src/dom_visitor.ts","../../../../packages/platform-browser/src/facade/lang.ts","../../../../packages/platform-browser/src/facade/error.ts","../../../../packages/platform-browser/src/selector.ts","../../../../packages/platform-browser/src/facade/collection.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {DOCUMENT,DomRendererFactory,BrowserPlatformRef,ExpressionParser,PLATFORM_PROVIDERS,platformBrowser} from './public_api';\n\nexport {BindingParser as ɵb} from './src/binding_parser';\nexport {Compiler as ɵa} from './src/compiler/compiler';","/**\n * @module\n * @description\n * Entry point for all public APIs of the core package.\n */\nexport {DOCUMENT,DomRendererFactory,BrowserPlatformRef,ExpressionParser,PLATFORM_PROVIDERS,platformBrowser} from './src/platform-browser';\n","import {\n  createPlatformFactory, PlatformRef, InjectionToken, RendererFactory, CORE_PROVIDERS, Provider\n} from 'mojiito-core';\nimport { unimplemented } from './facade/error';\nimport { ListWrapper } from './facade/collection';\nimport { BrowserPlatformRef } from './platform_ref';\nimport { DOCUMENT } from './tokens';\nimport { Compiler } from './compiler/compiler';\nimport { DomTraverser } from './dom_traverser';\nimport { DomRendererFactory } from './dom_renderer';\nimport { ExpressionParser } from './expression/expression';\nimport { BindingParser } from './binding_parser';\n\nexport { DOCUMENT, DomRendererFactory, BrowserPlatformRef, ExpressionParser };\n\nexport const /** @type {?} */ PLATFORM_PROVIDERS: Provider[] = [\n  { provide: PlatformRef, useClass: BrowserPlatformRef },\n  { provide: DOCUMENT, useValue: document },\n  { provide: RendererFactory, useClass: DomRendererFactory},\n  Compiler,\n  ExpressionParser,\n  BindingParser\n];\n\nexport const /** @type {?} */ platformBrowser = createPlatformFactory([PLATFORM_PROVIDERS, CORE_PROVIDERS]);\n","import { Renderer, RendererFactory, Injectable, RendererType, Visitor } from 'mojiito-core';\nimport { isPresent, stringify } from './facade/lang';\nimport { DOCUMENT } from './tokens';\nimport { DomTraverser } from './dom_traverser';\nimport { DomVisitor } from './dom_visitor';\n\nexport const /** @type {?} */ NAMESPACE_URIS: { [ns: string]: string } = {\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xml': 'http://www.w3.org/XML/1998/namespace'\n};\n/**\n * @param {?} target\n * @return {?}\n */\nfunction getGlobalEventTarget(target: string): any {\n  if (target === 'window') {\n    return window;\n  }\n  if (target === 'document') {\n    return this.document;\n  }\n  if (target === 'body') {\n    return this.document.body;\n  }\n  return undefined;\n}\nexport class DomRendererFactory implements RendererFactory {\nprivate rendererByCompId = new Map<string, Renderer>();\nprivate defaultRenderer: Renderer;\nconstructor() {\n    this.defaultRenderer = new DefaultDomRenderer();\n  };\n/**\n * @param {?} element\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(element: any, type: RendererType): Renderer {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    return new ParseableDomRenderer(type.visitor, element);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DomRendererFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nDomRendererFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomRendererFactory.ctorParameters;\n/** @type {?} */\nDomRendererFactory.prototype.rendererByCompId;\n/** @type {?} */\nDomRendererFactory.prototype.defaultRenderer;\n}\n\nexport class DefaultDomRenderer implements Renderer {\n/**\n * @param {?} context\n * @return {?}\n */\nparse(context: any) {\n    throw new Error(`Parse is not allowed on the DefaultDomRenderer!`);\n  }\n/**\n * @return {?}\n */\ndestroy(): void { }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    if (namespace) {\n      return document.createElementNS(NAMESPACE_URIS[namespace], name);\n    }\n    return document.createElement(name);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any { return document.createComment(value); }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any { return document.createTextNode(value); }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any): void { }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void { parent.appendChild(newChild); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string | any): any {\n    let /** @type {?} */ el: any = selectorOrNode;\n    if (typeof selectorOrNode === 'string') {\n      el = document.querySelector(selectorOrNode);\n    }\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    return el;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return node.parentNode; }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return node.nextSibling; }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      el.setAttributeNS(NAMESPACE_URIS[namespace], namespace + ':' + name, value);\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      el.removeAttributeNS(NAMESPACE_URIS[namespace], name);\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void { el.classList.add(name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void { el.classList.remove(name); }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} hasVendorPrefix\n * @param {?} hasImportant\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, hasVendorPrefix: boolean, hasImportant: boolean):\n    void {\n    if (hasVendorPrefix || hasImportant) {\n      el.style.setProperty(style, value, hasImportant ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} hasVendorPrefix\n * @return {?}\n */\nremoveStyle(el: any, style: string, hasVendorPrefix: boolean): void {\n    if (hasVendorPrefix) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      el.style[style] = '';\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void { el[name] = value; }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { node.nodeValue = value; }\n/**\n * @param {?} target\n * @param {?} event\n * @param {?} callback\n * @return {?}\n */\nlisten(target: 'window' | 'document' | 'body' | any, event: string,\n    callback: (event: any) => boolean | void): () => void {\n    if (typeof target === 'string') {\n      target = getGlobalEventTarget(target);\n      if (!target) {\n        throw new Error(`Unsupported event target ${target} for event ${event}`);\n      }\n    }\n    target.addEventListener(event, /** @type {?} */(( callback as any)), false);\n    return () => target.removeEventListener(event, /** @type {?} */(( callback as any)), false);\n  }\n}\nexport class ParseableDomRenderer extends DefaultDomRenderer {\n/**\n * @param {?} _visitor\n * @param {?} hostElement\n */\nconstructor(private _visitor: Visitor,\npublic hostElement: Node) {\n    super();\n  }\n/**\n * @param {?} context\n * @return {?}\n */\nparse(context: any) {\n    const /** @type {?} */ traverser = new DomTraverser();\n    traverser.traverse(this.hostElement, this._visitor, context);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    if (node instanceof Node) {\n      this.removeChild(node.parentNode, node);\n    }\n  }\n}\n\nfunction ParseableDomRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nParseableDomRenderer.prototype._visitor;\n/** @type {?} */\nParseableDomRenderer.prototype.hostElement;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Visitor, ViewData } from 'mojiito-core';\nimport { DomVisitor } from './dom_visitor';\n\nexport interface Traverser {\n  traverse(node: any, visitor: Visitor, context: ViewData): void;\n}\nexport class DomTraverser implements Traverser {\nprivate _nodeCount = 0;\nprivate _elementCount = 0;\nprivate _attributeCount = 0;\nprivate _textCount = 0;\nprivate _commentCount = 0;\nconstructor() { }\n/**\n * @param {?} node\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\ntraverse(node: Node, visitor: Visitor, context: ViewData = null) {\n    let /** @type {?} */ lclCntxt: ViewData = context;\n    this._nodeCount++;\n\n    if (node instanceof Element) {\n      lclCntxt = visitor.visitElement(node, lclCntxt) || lclCntxt;\n      this._elementCount++;\n    } else if (node instanceof Text) {\n      lclCntxt = visitor.visitText(node, lclCntxt) || lclCntxt;\n      this._textCount++;\n    } else if (node instanceof Comment) {\n      lclCntxt = visitor.visitComment(node, lclCntxt) || lclCntxt;\n      this._commentCount++;\n    }\n\n    // Check if context has changed and look up the corresponding\n    // NodeVisitor if available\n    if (!!lclCntxt && lclCntxt !== context) {\n      let /** @type {?} */ rendererType = lclCntxt.def.componentRendererType;\n      if (rendererType) {\n        visitor = rendererType.visitor;\n      }\n    } else {\n      // Traverse through all the attributes of the node\n      // if it is type of Element\n      if (node instanceof Element && node.attributes.length) {\n        for (let /** @type {?} */ i = 0, /** @type {?} */ max = node.attributes.length; i < max; i++) {\n          lclCntxt = visitor.visitAttribute(node, node.attributes[i], lclCntxt) || lclCntxt;\n          this._attributeCount++;\n        }\n      }\n    }\n\n    // Start traversing the child nodes\n    let /** @type {?} */ childNode = node.firstChild;\n    if (childNode) {\n      this.traverse(childNode, visitor, lclCntxt);\n      while (childNode = childNode.nextSibling) {\n        this.traverse(childNode, visitor, lclCntxt);\n      }\n    }\n  }\n}\n\nfunction DomTraverser_tsickle_Closure_declarations() {\n/** @type {?} */\nDomTraverser.prototype._nodeCount;\n/** @type {?} */\nDomTraverser.prototype._elementCount;\n/** @type {?} */\nDomTraverser.prototype._attributeCount;\n/** @type {?} */\nDomTraverser.prototype._textCount;\n/** @type {?} */\nDomTraverser.prototype._commentCount;\n}\n\n","import { InjectionToken } from 'mojiito-core';\n\nexport const /** @type {?} */ DOCUMENT = new InjectionToken<Document>('DocumentToken');\n","import {\n  PlatformRef, Injectable, Injector, ClassType, ApplicationRef,\n  ComponentResolver, ReflectiveInjector, ComponentFactoryResolver\n} from 'mojiito-core';\nimport { Compiler } from './compiler/compiler';\nexport class BrowserPlatformRef extends PlatformRef {\nprivate _destroyed = false;\nprivate _destroyListeners: Function[] = [];\n/**\n * @param {?} _injector\n * @param {?} _resolver\n * @param {?} _compiler\n */\nconstructor(private _injector: Injector,\nprivate _resolver: ComponentResolver,\nprivate _compiler: Compiler) {\n    super();\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return this._destroyed; }\n/**\n * @template C\n * @param {?} component\n * @return {?}\n */\nbootstrapComponent<C>(component: ClassType<C>): void {\n    this._compiler.compileComponents([component]);\n    const /** @type {?} */ appInjector = ReflectiveInjector.resolveAndCreate([\n      {\n        provide: ComponentFactoryResolver,\n        useFactory: () => this._compiler.createComponentFactoryResolver()\n      },\n      ApplicationRef\n    ], this._injector);\n\n    const /** @type {?} */ app = /** @type {?} */(( appInjector.get(ApplicationRef) as ApplicationRef));\n    app.bootstrap(component);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void {\n    this._destroyListeners.push(callback);\n  }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    // TODO: destroy all se stuff\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: ComponentResolver, },\n{type: Compiler, },\n];\n}\n\nfunction BrowserPlatformRef_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserPlatformRef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserPlatformRef.ctorParameters;\n/** @type {?} */\nBrowserPlatformRef.prototype._destroyed;\n/** @type {?} */\nBrowserPlatformRef.prototype._destroyListeners;\n/** @type {?} */\nBrowserPlatformRef.prototype._injector;\n/** @type {?} */\nBrowserPlatformRef.prototype._resolver;\n/** @type {?} */\nBrowserPlatformRef.prototype._compiler;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ClassType, Component, ComponentResolver, Injectable, Renderer, RendererType, ComponentRef,\n  ComponentFactory, ComponentFactoryResolver, createComponentFactory, resolveReflectiveProviders,\n  ElementRef, Injector, ApplicationRef, Provider, ReflectiveInjector, ReflectorReader,\n  HostListener, ChildListener, createViewDefinitionFactory, SkipSelf, NodeFlags, NodeDef,\n  ViewDefinitionFactory, ViewDefinition, DepFlags, constructDependencies, ProviderDef, DepDef,\n  Visitor\n} from 'mojiito-core';\nimport { ListWrapper } from '../facade/collection';\nimport { stringify } from '../facade/lang';\nimport { DomVisitor } from '../dom_visitor';\nimport { DomTraverser } from '../dom_traverser';\nimport { BindingParser, EventBindingParseResult } from '../binding_parser';\nimport { CompileComponentSummary } from './compile_result';\nexport class Compiler {\nprivate _compileResults = new Map<ClassType<any>, CompileComponentSummary>();\n/**\n * @param {?} _resolver\n * @param {?} _bindParser\n */\nconstructor(private _resolver: ComponentResolver,\nprivate _bindParser: BindingParser) { }\n/**\n * @return {?}\n */\ncreateComponentFactoryResolver() {\n    const /** @type {?} */ factories: ComponentFactory<any>[] = [];\n    this._compileResults.forEach(summary => {\n      factories.push(summary.componentFactory);\n    });\n    return new ComponentFactoryResolver(factories);\n  }\n/**\n * @param {?} components\n * @return {?}\n */\ncompileComponents(components: ClassType<any>[]): CompileComponentSummary[] {\n    return components.map(c => this.compileComponent(c));\n  }\n/**\n * @template C\n * @param {?} component\n * @return {?}\n */\ncompileComponent<C>(component: ClassType<C>): CompileComponentSummary {\n    let /** @type {?} */ compileSummary = this._compileResults.get(component);\n    if (compileSummary) {\n      return compileSummary;\n    }\n\n    // grab component metadata\n    const /** @type {?} */ metadata = this._resolver.resolve(component);\n\n    // compile child components\n    let /** @type {?} */ childComponents: CompileComponentSummary[];\n    let /** @type {?} */ rendererType: RendererType;\n    if (metadata.components) {\n      childComponents = this.compileComponents(ListWrapper.flatten(metadata.components));\n\n      // create a renderer type with a visitor for this component with all\n      // sub components\n      rendererType = this._createComponentRendererType(new DomVisitor(childComponents));\n    }\n\n    // create a view definition factory for this component type\n    const /** @type {?} */ viewDefinitionFactory =\n      this._createComponentViewDef(component, metadata.providers, rendererType);\n\n    // create a component factory for this component type\n    const /** @type {?} */ componentFactory =\n      createComponentFactory(metadata.selector, component, viewDefinitionFactory);\n\n    compileSummary = {\n      type: component,\n      selector: metadata.selector,\n      hostListeners: metadata.host,\n      childListeners: metadata.childs,\n      componentFactory,\n      viewDefinitionFactory,\n      components: childComponents\n    };\n    this._compileResults.set(component, compileSummary);\n    return compileSummary;\n  }\n/**\n * @param {?} providers\n * @param {?} nodes\n * @param {?} nodeType\n * @return {?}\n */\nprivate _createProviderNodes(providers: Provider[], nodes: NodeDef[],\n    nodeType: NodeFlags): NodeDef[] {\n    const /** @type {?} */ nodeDefs = resolveReflectiveProviders(ListWrapper.flatten(providers))\n      .map((provider, index) => {\n        const /** @type {?} */ factory = provider.resolvedFactories[0];\n        const /** @type {?} */ node = /** @type {?} */(( <NodeDef>{\n          flags: nodeType,\n          index: nodes.length + index,\n          provider: /** @type {?} */(( <ProviderDef>{\n            token: provider.key.token,\n            tokenKey: provider.key.displayName,\n            factory: factory.factory,\n            deps: factory.dependencies.map(dep => {\n              let /** @type {?} */ flags = 0;\n              if (dep.optional) {\n                flags += DepFlags.Optional;\n              }\n              if (dep.visibility instanceof SkipSelf) {\n                flags += DepFlags.SkipSelf;\n              }\n              return /** @type {?} */(( <DepDef>{\n                flags,\n                token: dep.key.token,\n                tokenKey: dep.key.displayName\n              }));\n            })\n          }))\n        }));\n        return node;\n      });\n    nodes.push(...nodeDefs);\n    return nodeDefs;\n  }\n/**\n * @param {?} visitor\n * @return {?}\n */\nprivate _createComponentRendererType(visitor: Visitor): RendererType {\n    return {\n      visitor,\n      data: null\n    };\n  }\n/**\n * @param {?} component\n * @param {?} providers\n * @param {?} componentRendererType\n * @return {?}\n */\nprivate _createComponentViewDef(component: ClassType<any>, providers: Provider[],\n      componentRendererType: RendererType): ViewDefinitionFactory {\n    const /** @type {?} */ viewDefinitionFactory: ViewDefinitionFactory = () => {\n      const /** @type {?} */ nodes: NodeDef[] = [];\n      let /** @type {?} */ nodeFlags = NodeFlags.ComponentView;\n\n      // Create public provider instances and add to nodes\n      let /** @type {?} */ publicProviders: {[key: string]: NodeDef} = {};\n      if (providers) {\n        this._createProviderNodes(providers, nodes, NodeFlags.TypeProvider).forEach(node => {\n          publicProviders[node.provider.tokenKey] = node;\n        });\n        nodeFlags |= NodeFlags.TypeProvider;\n      }\n\n      // Create component instance and add to nodes\n      this._createProviderNodes([component], nodes, NodeFlags.TypeComponent);\n      const /** @type {?} */ componentProvider = nodes[nodes.length - 1];\n      nodeFlags |= NodeFlags.TypeComponent;\n\n      // Set allProviders to publicProviders plus private providers (componentProvider)\n      const /** @type {?} */ allProviders = publicProviders;\n      allProviders[componentProvider.provider.tokenKey] = componentProvider;\n\n      return /** @type {?} */(( <ViewDefinition>{\n        factory: viewDefinitionFactory,\n        nodeFlags,\n        nodes,\n        componentProvider,\n        publicProviders,\n        allProviders,\n        componentRendererType\n      }));\n    };\n    return viewDefinitionFactory;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentResolver, },\n{type: BindingParser, },\n];\n}\n\nfunction Compiler_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompiler.ctorParameters;\n/** @type {?} */\nCompiler.prototype._compileResults;\n/** @type {?} */\nCompiler.prototype._resolver;\n/** @type {?} */\nCompiler.prototype._bindParser;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from 'mojiito-core';\nimport { Expression, ExpressionParser } from './expression/expression';\nimport { isPresent } from './facade/lang';\n\n// tslint:disable-next-line:max-line-length\nconst /** @type {?} */ BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\n// Group 1 = \"bind-\"\nconst /** @type {?} */ KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nconst /** @type {?} */ KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nconst /** @type {?} */ KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nconst /** @type {?} */ KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nconst /** @type {?} */ KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nconst /** @type {?} */ KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nconst /** @type {?} */ IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nconst /** @type {?} */ IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nconst /** @type {?} */ IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nconst /** @type {?} */ IDENT_EVENT_IDX = 10;\n\nconst /** @type {?} */ CLASS_ATTR = 'class';\nexport class BindingParser {\n/**\n * @param {?} _exprParser\n */\nconstructor(private _exprParser: ExpressionParser) { }\n/**\n * @param {?} name\n * @param {?} expression\n * @return {?}\n */\nparse(name: string, expression: string) {\n    const /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n    const /** @type {?} */ expr = this._exprParser.parse(expression);\n    let /** @type {?} */ key: string;\n\n    if (isPresent(bindParts[KW_BIND_IDX])) {\n      unsupported('Property binding', name, expression);\n    } else if (bindParts[KW_REF_IDX]) {\n      unsupported('Variable declaration', name, expression);\n    } else if (bindParts[KW_ON_IDX]) {\n      return new EventBindingParseResult(bindParts[IDENT_KW_IDX], expr);\n    } else if (bindParts[KW_BINDON_IDX]) {\n      unsupported('Two way binding', name, expression);\n    } else if (bindParts[KW_AT_IDX]) {\n      unsupported('Animations', name, expression);\n    } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n      unsupported('Two way binding', name, expression);\n    } else if (bindParts[IDENT_PROPERTY_IDX]) {\n      unsupported('Property binding', name, expression);\n    } else if (bindParts[IDENT_EVENT_IDX]) {\n      return new EventBindingParseResult(bindParts[IDENT_EVENT_IDX], expr);\n    } else {\n      throw new Error(`Unknown binding name: ${name}`);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ExpressionParser, },\n];\n}\n\nfunction BindingParser_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingParser.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBindingParser.ctorParameters;\n/** @type {?} */\nBindingParser.prototype._exprParser;\n}\n\nexport class BindingParseResult {\n/**\n * @param {?} expression\n */\nconstructor(public expression: Expression) { }\n}\n\nfunction BindingParseResult_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingParseResult.prototype.expression;\n}\n\nexport class EventBindingParseResult extends BindingParseResult {\n/**\n * @param {?} eventName\n * @param {?} expression\n */\nconstructor(public eventName: string, expression: Expression) {\n    super(expression);\n  }\n}\n\nfunction EventBindingParseResult_tsickle_Closure_declarations() {\n/** @type {?} */\nEventBindingParseResult.prototype.eventName;\n}\n\n/**\n * @param {?} type\n * @param {?} name\n * @param {?} expression\n * @return {?}\n */\nfunction unsupported(type: string, name: string, expression: string) {\n  throw new Error(`${type} is not yet supported: ${name}=\"${expression}\"`);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Token, ExpressionParser } from './expression_parser';\n\nexport { Token, ExpressionParser };\nexport class Expression {\n/**\n * @param {?} tokens\n */\nconstructor(public tokens: Token[]) { }\n}\n\nfunction Expression_tsickle_Closure_declarations() {\n/** @type {?} */\nExpression.prototype.tokens;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport { Injectable } from 'mojiito-core';\nimport * as chars from '../chars';\nimport { NumberWrapper } from '../facade/lang';\nimport { Expression } from './expression';\nexport type TokenType = number;\nexport let TokenType: any = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\n\n\nconst /** @type {?} */ KEYWORDS = ['var', 'let', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nexport class ExpressionParser {\n/**\n * @param {?} text\n * @return {?}\n */\ntokenize(text: string): Token[] {\n    const /** @type {?} */ scanner = new Scanner(text);\n    const /** @type {?} */ tokens: Token[] = [];\n    let /** @type {?} */ token = scanner.scanToken();\n    while (token != null) {\n      tokens.push(token);\n      token = scanner.scanToken();\n    }\n    return tokens;\n  }\n/**\n * @param {?} text\n * @return {?}\n */\nparse(text: string): Expression {\n    return new Expression(this.tokenize(text));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ExpressionParser_tsickle_Closure_declarations() {\n/** @type {?} */\nExpressionParser.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpressionParser.ctorParameters;\n}\n\nexport class Token {\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} numValue\n * @param {?} strValue\n */\nconstructor(\npublic index: number,\npublic type: TokenType,\npublic numValue: number,\npublic strValue: string) { }\n/**\n * @param {?} code\n * @return {?}\n */\nisCharacter(code: number): boolean {\n    return this.type == TokenType.Character && this.numValue == code;\n  }\n/**\n * @return {?}\n */\nisNumber(): boolean { return this.type == TokenType.Number; }\n/**\n * @return {?}\n */\nisString(): boolean { return this.type == TokenType.String; }\n/**\n * @param {?} operater\n * @return {?}\n */\nisOperator(operater: string): boolean {\n    return this.type == TokenType.Operator && this.strValue == operater;\n  }\n/**\n * @return {?}\n */\nisIdentifier(): boolean { return this.type == TokenType.Identifier; }\n/**\n * @return {?}\n */\nisKeyword(): boolean { return this.type == TokenType.Keyword; }\n/**\n * @return {?}\n */\nisKeywordLet(): boolean { return this.type == TokenType.Keyword && this.strValue == 'let'; }\n/**\n * @return {?}\n */\nisKeywordNull(): boolean { return this.type == TokenType.Keyword && this.strValue == 'null'; }\n/**\n * @return {?}\n */\nisKeywordUndefined(): boolean {\n    return this.type == TokenType.Keyword && this.strValue == 'undefined';\n  }\n/**\n * @return {?}\n */\nisKeywordTrue(): boolean { return this.type == TokenType.Keyword && this.strValue == 'true'; }\n/**\n * @return {?}\n */\nisKeywordFalse(): boolean { return this.type == TokenType.Keyword && this.strValue == 'false'; }\n/**\n * @return {?}\n */\nisKeywordThis(): boolean { return this.type == TokenType.Keyword && this.strValue == 'this'; }\n/**\n * @return {?}\n */\nisError(): boolean { return this.type == TokenType.Error; }\n/**\n * @return {?}\n */\ntoNumber(): number { return this.type == TokenType.Number ? this.numValue : -1; }\n/**\n * @return {?}\n */\ntoString(): string {\n    switch (this.type) {\n      case TokenType.Character:\n      case TokenType.Identifier:\n      case TokenType.Keyword:\n      case TokenType.Operator:\n      case TokenType.String:\n      case TokenType.Error:\n        return this.strValue;\n      case TokenType.Number:\n        return this.numValue.toString();\n      default:\n        return null;\n    }\n  }\n}\n\nfunction Token_tsickle_Closure_declarations() {\n/** @type {?} */\nToken.prototype.index;\n/** @type {?} */\nToken.prototype.type;\n/** @type {?} */\nToken.prototype.numValue;\n/** @type {?} */\nToken.prototype.strValue;\n}\n\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index: number, code: number): Token {\n  return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index: number, text: string): Token {\n  return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index: number, n: number): Token {\n  return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index: number, message: string): Token {\n  return new Token(index, TokenType.Error, 0, message);\n}\n\nexport const /** @type {?} */ EOF: Token = new Token(-1, TokenType.Character, 0, '');\nclass Scanner {\n  length: number;\n  peek = 0;\n  index = -1;\n/**\n * @param {?} input\n */\nconstructor(public input: string) {\n    this.length = input.length;\n    this.advance();\n  }\n/**\n * @return {?}\n */\nadvance() {\n    this.peek = ++this.index >= this.length ? chars.$EOF : this.input.charCodeAt(this.index);\n  }\n/**\n * @return {?}\n */\nscanToken(): Token {\n    const /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n    let /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n\n    // Skip whitespace.\n    while (peek <= chars.$SPACE) {\n      if (++index >= length) {\n        peek = chars.$EOF;\n        break;\n      } else {\n        peek = input.charCodeAt(index);\n      }\n    }\n\n    this.peek = peek;\n    this.index = index;\n\n    if (index >= length) {\n      return null;\n    }\n\n    // Handle identifiers and numbers.\n    if (isIdentifierStart(peek)) return this.scanIdentifier();\n    if (chars.isDigit(peek)) return this.scanNumber(index);\n\n    const /** @type {?} */ start: number = index;\n    switch (peek) {\n      case chars.$PERIOD:\n        this.advance();\n        return chars.isDigit(this.peek) ? this.scanNumber(start) :\n          newCharacterToken(start, chars.$PERIOD);\n      case chars.$LPAREN:\n      case chars.$RPAREN:\n      case chars.$LBRACE:\n      case chars.$RBRACE:\n      case chars.$LBRACKET:\n      case chars.$RBRACKET:\n      case chars.$COMMA:\n      case chars.$COLON:\n      case chars.$SEMICOLON:\n        return this.scanCharacter(start, peek);\n      case chars.$SQ:\n      case chars.$DQ:\n        return this.scanString();\n      case chars.$HASH:\n      case chars.$PLUS:\n      case chars.$MINUS:\n      case chars.$STAR:\n      case chars.$SLASH:\n      case chars.$PERCENT:\n      case chars.$CARET:\n        return this.scanOperator(start, String.fromCharCode(peek));\n      case chars.$QUESTION:\n        return this.scanComplexOperator(start, '?', chars.$PERIOD, '.');\n      case chars.$LT:\n      case chars.$GT:\n        return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=');\n      case chars.$BANG:\n      case chars.$EQ:\n        return this.scanComplexOperator(\n          start, String.fromCharCode(peek), chars.$EQ, '=', chars.$EQ, '=');\n      case chars.$AMPERSAND:\n        return this.scanComplexOperator(start, '&', chars.$AMPERSAND, '&');\n      case chars.$BAR:\n        return this.scanComplexOperator(start, '|', chars.$BAR, '|');\n      case chars.$NBSP:\n        while (chars.isWhitespace(this.peek)) this.advance();\n        return this.scanToken();\n    }\n\n    this.advance();\n    return this.error(`Unexpected character [${String.fromCharCode(peek)}]`, 0);\n  }\n/**\n * @param {?} start\n * @param {?} code\n * @return {?}\n */\nscanCharacter(start: number, code: number): Token {\n    this.advance();\n    return newCharacterToken(start, code);\n  }\n/**\n * @param {?} start\n * @param {?} str\n * @return {?}\n */\nscanOperator(start: number, str: string): Token {\n    this.advance();\n    return newOperatorToken(start, str);\n  }\n/**\n * Tokenize a 2/3 char long operator\n * \n * @param {?} start start index in the expression\n * @param {?} one first symbol (always part of the operator)\n * @param {?} twoCode code point for the second symbol\n * @param {?} two second symbol (part of the operator when the second code point matches)\n * @param {?=} threeCode code point for the third symbol\n * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n * @return {?}\n */\nscanComplexOperator(\n    start: number, one: string, twoCode: number, two: string, threeCode?: number,\n    three?: string): Token {\n    this.advance();\n    let /** @type {?} */ str: string = one;\n    if (this.peek == twoCode) {\n      this.advance();\n      str += two;\n    }\n    if (threeCode != null && this.peek == threeCode) {\n      this.advance();\n      str += three;\n    }\n    return newOperatorToken(start, str);\n  }\n/**\n * @return {?}\n */\nscanIdentifier(): Token {\n    const /** @type {?} */ start: number = this.index;\n    this.advance();\n    while (isIdentifierPart(this.peek)) this.advance();\n    const /** @type {?} */ str: string = this.input.substring(start, this.index);\n    return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n      newIdentifierToken(start, str);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nscanNumber(start: number): Token {\n    let /** @type {?} */ simple: boolean = (this.index === start);\n    this.advance();  // Skip initial digit.\n    while (true) {\n      if (chars.isDigit(this.peek)) {\n        // Do nothing.\n      } else if (this.peek == chars.$PERIOD) {\n        simple = false;\n      } else if (isExponentStart(this.peek)) {\n        this.advance();\n        if (isExponentSign(this.peek)) this.advance();\n        if (!chars.isDigit(this.peek)) return this.error('Invalid exponent', -1);\n        simple = false;\n      } else {\n        break;\n      }\n      this.advance();\n    }\n    const /** @type {?} */ str: string = this.input.substring(start, this.index);\n    const /** @type {?} */ value: number = simple ? NumberWrapper.parseIntAutoRadix(str) : parseFloat(str);\n    return newNumberToken(start, value);\n  }\n/**\n * @return {?}\n */\nscanString(): Token {\n    const /** @type {?} */ start = this.index;\n    const /** @type {?} */ quote = this.peek;\n    this.advance();  // Skip initial quote.\n\n    let /** @type {?} */ buffer = '';\n    let /** @type {?} */ marker = this.index;\n    const /** @type {?} */ input = this.input;\n\n    while (this.peek != quote) {\n      if (this.peek == chars.$BACKSLASH) {\n        buffer += input.substring(marker, this.index);\n        this.advance();\n        let /** @type {?} */ unescapedCode: number;\n        // Workaround for TS2.1-introduced type strictness\n        this.peek = this.peek;\n        if (this.peek == chars.$u) {\n          // 4 character hex code for unicode character.\n          const /** @type {?} */ hex: string = input.substring(this.index + 1, this.index + 5);\n          if (/^[0-9a-f]+$/i.test(hex)) {\n            unescapedCode = parseInt(hex, 16);\n          } else {\n            return this.error(`Invalid unicode escape [\\\\u${hex}]`, 0);\n          }\n          for (let /** @type {?} */ i = 0; i < 5; i++) {\n            this.advance();\n          }\n        } else {\n          unescapedCode = unescape(this.peek);\n          this.advance();\n        }\n        buffer += String.fromCharCode(unescapedCode);\n        marker = this.index;\n      } else if (this.peek == chars.$EOF) {\n        return this.error('Unterminated quote', 0);\n      } else {\n        this.advance();\n      }\n    }\n\n    const /** @type {?} */ last: string = input.substring(marker, this.index);\n    this.advance();  // Skip terminating quote.\n\n    return newStringToken(start, buffer + last);\n  }\n/**\n * @param {?} message\n * @param {?} offset\n * @return {?}\n */\nerror(message: string, offset: number): Token {\n    const /** @type {?} */ position: number = this.index + offset;\n    return newErrorToken(\n      position, `Lexer Error: ${message} at column ${position} in expression [${this.input}]`);\n  }\n}\n\nfunction Scanner_tsickle_Closure_declarations() {\n/** @type {?} */\nScanner.prototype.length;\n/** @type {?} */\nScanner.prototype.peek;\n/** @type {?} */\nScanner.prototype.index;\n/** @type {?} */\nScanner.prototype.input;\n}\n\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code: number): boolean {\n  return (chars.$a <= code && code <= chars.$z) || (chars.$A <= code && code <= chars.$Z) ||\n    (code == chars.$_) || (code == chars.$$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function isIdentifier(input: string): boolean {\n  if (input.length == 0) return false;\n  const /** @type {?} */ scanner = new Scanner(input);\n  if (!isIdentifierStart(scanner.peek)) return false;\n  scanner.advance();\n  while (scanner.peek !== chars.$EOF) {\n    if (!isIdentifierPart(scanner.peek)) return false;\n    scanner.advance();\n  }\n  return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code: number): boolean {\n  return chars.isAsciiLetter(code) || chars.isDigit(code) || (code == chars.$_) ||\n    (code == chars.$$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code: number): boolean {\n  return code == chars.$e || code == chars.$E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code: number): boolean {\n  return code == chars.$MINUS || code == chars.$PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isQuote(code: number): boolean {\n  return code === chars.$SQ || code === chars.$DQ || code === chars.$BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code: number): number {\n  switch (code) {\n    case chars.$n:\n      return chars.$LF;\n    case chars.$f:\n      return chars.$FF;\n    case chars.$r:\n      return chars.$CR;\n    case chars.$t:\n      return chars.$TAB;\n    case chars.$v:\n      return chars.$VTAB;\n    default:\n      return code;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const $EOF = 0;\nexport const /** @type {?} */ $TAB = 9;\nexport const /** @type {?} */ $LF = 10;\nexport const /** @type {?} */ $VTAB = 11;\nexport const /** @type {?} */ $FF = 12;\nexport const /** @type {?} */ $CR = 13;\nexport const /** @type {?} */ $SPACE = 32;\nexport const /** @type {?} */ $BANG = 33;\nexport const /** @type {?} */ $DQ = 34;\nexport const /** @type {?} */ $HASH = 35;\nexport const /** @type {?} */ $$ = 36;\nexport const /** @type {?} */ $PERCENT = 37;\nexport const /** @type {?} */ $AMPERSAND = 38;\nexport const /** @type {?} */ $SQ = 39;\nexport const /** @type {?} */ $LPAREN = 40;\nexport const /** @type {?} */ $RPAREN = 41;\nexport const /** @type {?} */ $STAR = 42;\nexport const /** @type {?} */ $PLUS = 43;\nexport const /** @type {?} */ $COMMA = 44;\nexport const /** @type {?} */ $MINUS = 45;\nexport const /** @type {?} */ $PERIOD = 46;\nexport const /** @type {?} */ $SLASH = 47;\nexport const /** @type {?} */ $COLON = 58;\nexport const /** @type {?} */ $SEMICOLON = 59;\nexport const /** @type {?} */ $LT = 60;\nexport const /** @type {?} */ $EQ = 61;\nexport const /** @type {?} */ $GT = 62;\nexport const /** @type {?} */ $QUESTION = 63;\n\nexport const /** @type {?} */ $0 = 48;\nexport const /** @type {?} */ $9 = 57;\n\nexport const /** @type {?} */ $A = 65;\nexport const /** @type {?} */ $E = 69;\nexport const /** @type {?} */ $F = 70;\nexport const /** @type {?} */ $X = 88;\nexport const /** @type {?} */ $Z = 90;\n\nexport const /** @type {?} */ $LBRACKET = 91;\nexport const /** @type {?} */ $BACKSLASH = 92;\nexport const /** @type {?} */ $RBRACKET = 93;\nexport const /** @type {?} */ $CARET = 94;\nexport const /** @type {?} */ $_ = 95;\n\nexport const /** @type {?} */ $a = 97;\nexport const /** @type {?} */ $e = 101;\nexport const /** @type {?} */ $f = 102;\nexport const /** @type {?} */ $n = 110;\nexport const /** @type {?} */ $r = 114;\nexport const /** @type {?} */ $t = 116;\nexport const /** @type {?} */ $u = 117;\nexport const /** @type {?} */ $v = 118;\nexport const /** @type {?} */ $x = 120;\nexport const /** @type {?} */ $z = 122;\n\nexport const /** @type {?} */ $LBRACE = 123;\nexport const /** @type {?} */ $BAR = 124;\nexport const /** @type {?} */ $RBRACE = 125;\nexport const /** @type {?} */ $NBSP = 160;\n\nexport const /** @type {?} */ $PIPE = 124;\nexport const /** @type {?} */ $TILDA = 126;\nexport const /** @type {?} */ $AT = 64;\n\nexport const /** @type {?} */ $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isWhitespace(code: number): boolean {\n  return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isDigit(code: number): boolean {\n  return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isAsciiLetter(code: number): boolean {\n  return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isAsciiHexDigit(code: number): boolean {\n  return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n","import { CssSelector, SelectorMatcher } from './selector';\nimport { ClassType, Visitor, createView, ViewData } from 'mojiito-core';\nimport { WrappedError } from './facade/error';\nimport { stringify } from './facade/lang';\nimport { ListWrapper } from './facade/collection';\nimport { CompileComponentSummary } from './compiler/compile_result';\nexport class DomVisitor implements Visitor {\nprivate _selectorMatcher = new SelectorMatcher();\nprivate _componentsIndex = new Map<CompileComponentSummary, number>();\n/**\n * @param {?} components\n */\nconstructor(components: CompileComponentSummary[]) {\n    components.forEach((component, index) => {\n      const selector = CssSelector.parse(component.selector);\n      this._selectorMatcher.addSelectables(selector, component);\n      this._componentsIndex.set(component, index);\n    });\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: Element, context: ViewData): any {\n    const /** @type {?} */ elementCssSelector = CssSelector.fromElement(element);\n    let /** @type {?} */ matchingComponent: CompileComponentSummary;\n    this._selectorMatcher.match(elementCssSelector, (selector, component) => {\n      if (matchingComponent) {\n        throw new MultipleComponentsOnElementError([matchingComponent.type, component.type]);\n      }\n      matchingComponent = component;\n    });\n\n    // if no matching component return current context\n    if (!matchingComponent) {\n      return context;\n    }\n\n    // console.log(`Found ${stringify(matchingComponent.type)} on element:`, element);\n\n    const /** @type {?} */ viewDef = matchingComponent.viewDefinitionFactory();\n    const /** @type {?} */ view = createView(context.root, context, element, viewDef);\n\n    // console.log(`Created ${stringify(matchingComponent.type)} ` +\n    //   `with parent ${stringify(context.component.constructor)}`);\n\n    ListWrapper.forEach(element.attributes, attr => {\n\n    });\n\n    return view;\n  }\n/**\n * @param {?} element\n * @param {?} attr\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(element: Element, attr: Attr, context: any) { }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: Text, context: any) { }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: Comment, context: any) { }\n\n}\n\nfunction DomVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nDomVisitor.prototype._selectorMatcher;\n/** @type {?} */\nDomVisitor.prototype._componentsIndex;\n}\n\nexport class ParseError extends WrappedError {\n/**\n * @param {?} error\n */\nconstructor(error: any) {\n    super(`Parse Error`, error);\n  }\n}\nexport class MultipleComponentsOnElementError extends ParseError {\n/**\n * @param {?} components\n */\nconstructor(components: ClassType<any>[]) {\n    const names = components.map(c => stringify(c)).join(', ');\n    super(`The selectors of the components ${names} are matching the same DOM Element. ` +\n      `Only one component per element is allowed.`);\n  }\n}\n","\n/**\n * Returns the class name of a type.\n * \n * @export\n * @template T\n * @param {?} klass\n * @return {?}\n */\nexport function getClassName<T>(klass: Function) {\n  return ( /** @type {?} */((klass as any))).name ? ( /** @type {?} */((klass as any))).name :\n    /^function\\s+([\\w\\$]+)\\s*\\(/.exec(this.toString())[1];\n}\n/**\n * Tries to stringify a token. A token can be any type.\n * \n * @export\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token === undefined || token === null) {\n    return '' + token;\n  }\n  if (token.name) {\n    return token.name;\n  }\n  if (token.overriddenName) {\n    return token.overriddenName;\n  }\n  if (typeof token === 'function') {\n      return getClassName(token);\n  }\n  if (token instanceof HTMLElement) {\n    let /** @type {?} */ parts = token.toString().match(/\\w+/g);\n    if (parts && parts.length) {\n      return parts[parts.length - 1];\n    }\n  }\n\n  var /** @type {?} */ res = token.toString();\n  var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return (newLineIndex === -1) ? res : res.substring(0, newLineIndex);\n}\n\nexport interface BrowserNodeGlobal {\n  Object: typeof Object;\n  Array: typeof Array;\n  Map: typeof Map;\n  Set: typeof Set;\n  Date: DateConstructor;\n  RegExp: RegExpConstructor;\n  JSON: typeof JSON;\n  Math: any;  // typeof Math;\n  assert(condition: any): void;\n  Reflect: any;\n  setTimeout: Function;\n  clearTimeout: Function;\n  setInterval: Function;\n  clearInterval: Function;\n  encodeURI: Function;\n}\n\ndeclare var WorkerGlobalScope: any;\ndeclare var global: any;\nlet /** @type {?} */ globalScope: BrowserNodeGlobal;\nif (typeof window === 'undefined') {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n    // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n    globalScope = /** @type {?} */(( <any>self));\n  } else {\n    globalScope = /** @type {?} */(( <any>global));\n  }\n} else {\n  globalScope = /** @type {?} */(( <any>window));\n}\nexport {globalScope as global};\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isPresent(obj: any): boolean {\n  return obj != null;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isBlank(obj: any): boolean {\n  return obj == null;\n}\nexport class NumberWrapper {\n/**\n * @param {?} text\n * @return {?}\n */\nstatic parseIntAutoRadix(text: string): number {\n    const /** @type {?} */ result: number = parseInt(text);\n    if (isNaN(result)) {\n      throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic isNumeric(value: any): boolean { return !isNaN(value - parseFloat(value)); }\n}\n","\n/**\n * Convenience to throw an Error with 'unimplemented' as the message.\n * @return {?}\n */\nexport function unimplemented(): any {\n  throw new Error('unimplemented');\n}\nexport class BaseError extends Error {\n/**\n * \\@internal *\n */\n_nativeError: Error;\n/**\n * @param {?} message\n */\nconstructor(message: string) {\n    super(message);\n    // Errors don't use current this, instead they create a new instance.\n    // We have to do forward all of our api to the nativeInstance.\n    const nativeError = new Error(message) as any as Error;\n    this._nativeError = nativeError;\n  }\n/**\n * @return {?}\n */\nget message() { return this._nativeError.message; }\n/**\n * @param {?} message\n * @return {?}\n */\nset message(message) { this._nativeError.message = message; }\n/**\n * @return {?}\n */\nget name() { return this._nativeError.name; }\n/**\n * @return {?}\n */\nget stack() { return ( /** @type {?} */((this._nativeError as any))).stack; }\n/**\n * @param {?} value\n * @return {?}\n */\nset stack(value) { ( /** @type {?} */((this._nativeError as any))).stack = value; }\n/**\n * @return {?}\n */\ntoString() { return this._nativeError.toString(); }\n}\n\nfunction BaseError_tsickle_Closure_declarations() {\n/**\n * \\@internal *\n * @type {?}\n */\nBaseError.prototype._nativeError;\n}\n\nexport class WrappedError extends BaseError {\n  originalError: any;\n/**\n * @param {?} message\n * @param {?} error\n */\nconstructor(message: string, error: any) {\n    super(`${message} caused by: ${error instanceof Error ? error.message : error}`);\n    this.originalError = error;\n  }\n/**\n * @return {?}\n */\nget stack() {\n    return ( /** @type {?} */(((this.originalError instanceof Error ? this.originalError : this._nativeError) as any)))\n      .stack;\n  }\n}\n\nfunction WrappedError_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedError.prototype.originalError;\n}\n\n","import { ListWrapper } from './facade/collection';\n\nconst /** @type {?} */ _SELECTOR_REGEXP = new RegExp(\n  '(\\\\:not\\\\()|' +           // \":not(\"\n  '([-\\\\w]+)|' +         // \"tag\"\n  '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n  // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n  '(?:\\\\[([-.\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +  // \"[name]\", \"[name=value]\"\n  '(\\\\))|' +                                 // \")\"\n  '(\\\\s*,\\\\s*)',                             // \",\"\n  'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string = null;\n  classNames: string[] = [];\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n/**\n * @param {?} element\n * @return {?}\n */\nstatic fromElement(element: Element): CssSelector {\n    const /** @type {?} */ selector = new CssSelector();\n    selector.setElement(element.tagName.toLocaleLowerCase());\n    ListWrapper.forEach(element.attributes, (attr: Attr) => {\n      if (attr.name.toLocaleLowerCase() !== 'class') {\n        selector.addAttribute(attr.name.trim(), attr.value.trim());\n      }\n    });\n    ListWrapper.forEach(element.classList, (c: string) => selector.addClassName(c));\n    return selector;\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\nstatic parse(selector: string): CssSelector[] {\n    const /** @type {?} */ results: CssSelector[] = [];\n    const /** @type {?} */ _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n        cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let /** @type {?} */ cssSelector = new CssSelector();\n    let /** @type {?} */ match: string[];\n    let /** @type {?} */ current = cssSelector;\n    let /** @type {?} */ inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[5]);\n      }\n      if (match[6]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[7]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n/**\n * @return {?}\n */\nisElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n      this.notSelectors.length === 0;\n  }\n/**\n * @return {?}\n */\nhasElementSelector(): boolean { return !!this.element; }\n/**\n * @param {?=} element\n * @return {?}\n */\nsetElement(element: string = null) { this.element = element; }\n/**\n * @param {?} name\n * @param {?=} value\n * @return {?}\n */\naddAttribute(name: string, value = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n/**\n * @param {?} name\n * @return {?}\n */\naddClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n/**\n * @return {?}\n */\ntoString(): string {\n    let /** @type {?} */ res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n        const /** @type {?} */ name = this.attrs[i];\n        const /** @type {?} */ value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\nfunction CssSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nCssSelector.prototype.element;\n/** @type {?} */\nCssSelector.prototype.classNames;\n/** @type {?} */\nCssSelector.prototype.attrs;\n/** @type {?} */\nCssSelector.prototype.notSelectors;\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n/**\n * @param {?} notSelectors\n * @return {?}\n */\nstatic createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    const /** @type {?} */ notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\nprivate _elementMap = new Map<string, SelectorContext[]>();\nprivate _elementPartialMap = new Map<string, SelectorMatcher>();\nprivate _classMap = new Map<string, SelectorContext[]>();\nprivate _classPartialMap = new Map<string, SelectorMatcher>();\nprivate _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\nprivate _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\nprivate _listContexts: SelectorListContext[] = [];\n/**\n * @param {?} cssSelectors\n * @param {?=} callbackCtxt\n * @return {?}\n */\naddSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    let /** @type {?} */ listContext: SelectorListContext = null;\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n/**\n * Add an object that can be found later on by calling `match`.\n * @param {?} cssSelector A css selector\n * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n * @param {?} listContext\n * @return {?}\n */\nprivate _addSelectable(\n    cssSelector: CssSelector, callbackCtxt: any, listContext: SelectorListContext) {\n    let /** @type {?} */ matcher: SelectorMatcher = this;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n    const /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const /** @type {?} */ className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ isTerminal = i === attrs.length - 2;\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n        if (isTerminal) {\n          const /** @type {?} */ terminalMap = matcher._attrValueMap;\n          let /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n          let /** @type {?} */ partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @param {?} selectable\n * @return {?}\n */\nprivate _addTerminal(\n    map: Map<string, SelectorContext[]>, name: string, selectable: SelectorContext) {\n    let /** @type {?} */ terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @return {?}\n */\nprivate _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    let /** @type {?} */ matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n/**\n * Find the objects that have been added via `addSelectable`\n * whose css selector is contained in the given css selector.\n * @param {?} cssSelector A css selector\n * @param {?=} matchedCallback This callback will be called with the object handed into `addSelectable`\n * @return {?} boolean true if a match was found\n */\nmatch(cssSelector: CssSelector,\n    matchedCallback: (c: CssSelector, a: any) => void = function () { }): boolean {\n    let /** @type {?} */ result = false;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n\n    for (let /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n      result;\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ className = classNames[i];\n        result =\n          this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n          this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n          result;\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n\n        const /** @type {?} */ terminalValuesMap = this._attrValueMap.get(name);\n        if (value) {\n          result =\n            this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n          this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const /** @type {?} */ partialValuesMap = this._attrValuePartialMap.get(name);\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n          this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchTerminal(\n    map: Map<string, SelectorContext[]>, name: string, cssSelector: CssSelector,\n    matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let /** @type {?} */ selectables: SelectorContext[] = map.get(name) || [];\n    const /** @type {?} */ starSelectables: SelectorContext[] = map.get('*');\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let /** @type {?} */ selectable: SelectorContext;\n    let /** @type {?} */ result = false;\n    for (let /** @type {?} */ i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchPartial(\n    map: Map<string, SelectorMatcher>, name: string, cssSelector: CssSelector,\n    matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const /** @type {?} */ nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\nfunction SelectorMatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorMatcher.prototype._elementMap;\n/** @type {?} */\nSelectorMatcher.prototype._elementPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._classMap;\n/** @type {?} */\nSelectorMatcher.prototype._classPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValueMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValuePartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._listContexts;\n}\n\nexport class SelectorListContext {\n  alreadyMatched = false;\n/**\n * @param {?} selectors\n */\nconstructor(public selectors: CssSelector[]) { }\n}\n\nfunction SelectorListContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorListContext.prototype.alreadyMatched;\n/** @type {?} */\nSelectorListContext.prototype.selectors;\n}\n\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n/**\n * @param {?} selector\n * @param {?} cbContext\n * @param {?} listContext\n */\nconstructor(\npublic selector: CssSelector,\npublic cbContext: any,\npublic listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n/**\n * @param {?} cssSelector\n * @param {?} callback\n * @return {?}\n */\nfinalize(cssSelector: CssSelector, callback: (c: CssSelector, a: any) => void): boolean {\n    let /** @type {?} */ result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n\nfunction SelectorContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorContext.prototype.notSelectors;\n/** @type {?} */\nSelectorContext.prototype.selector;\n/** @type {?} */\nSelectorContext.prototype.cbContext;\n/** @type {?} */\nSelectorContext.prototype.listContext;\n}\n\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class StringMapWrapper {\n/**\n * @template V\n * @param {?} m1\n * @param {?} m2\n * @return {?}\n */\nstatic merge<V>(m1: {[key: string]: V}, m2: {[key: string]: V}): {[key: string]: V} {\n    const /** @type {?} */ m: {[key: string]: V} = {};\n\n    for (const /** @type {?} */ k of Object.keys(m1)) {\n      m[k] = m1[k];\n    }\n\n    for (const /** @type {?} */ k of Object.keys(m2)) {\n      m[k] = m2[k];\n    }\n\n    return m;\n  }\n/**\n * @template V\n * @param {?} m1\n * @param {?} m2\n * @return {?}\n */\nstatic equals<V>(m1: {[key: string]: V}, m2: {[key: string]: V}): boolean {\n    const /** @type {?} */ k1 = Object.keys(m1);\n    const /** @type {?} */ k2 = Object.keys(m2);\n\n    if (k1.length != k2.length) {\n      return false;\n    }\n\n    for (let /** @type {?} */ i = 0; i < k1.length; i++) {\n      const /** @type {?} */ key = k1[i];\n      if (m1[key] !== m2[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\nexport class ListWrapper {\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nstatic findLast<T>(arr: T[], condition: (value: T) => boolean): T {\n    for (let /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n      if (condition(arr[i])) {\n        return arr[i];\n      }\n    }\n    return null;\n  }\n/**\n * @template T\n * @param {?} list\n * @param {?} items\n * @return {?}\n */\nstatic removeAll<T>(list: T[], items: T[]) {\n    for (let /** @type {?} */ i = 0; i < items.length; ++i) {\n      const /** @type {?} */ index = list.indexOf(items[i]);\n      if (index > -1) {\n        list.splice(index, 1);\n      }\n    }\n  }\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nstatic remove<T>(list: T[], el: T): boolean {\n    const /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n      list.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nstatic equals(a: any[], b: any[]): boolean {\n    if (a.length != b.length) return false;\n    for (let /** @type {?} */ i = 0; i < a.length; ++i) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nstatic flatten<T>(list: Array<T | T[]>): T[] {\n    return list.reduce((flat: any[], item: T | T[]): T[] => {\n      const /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n      return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n    }, []);\n  }\n/**\n * @template T\n * @param {?} list\n * @param {?} callback\n * @return {?}\n */\nstatic forEach<T>(list: ArrayLike<T>, callback: (item: T, index: number) => void): void {\n    for (let /** @type {?} */ i = 0, /** @type {?} */ max = list.length; i < max; i++) {\n      callback.call(callback, list[i], i);\n    }\n  }\n}\n"],"names":["ExpressionParser","chars.$VTAB","chars.$v","chars.$TAB","chars.$t","chars.$CR","chars.$r","chars.$FF","chars.$f","chars.$LF","chars.$n","chars.$MINUS","chars.$PLUS","chars.$e","chars.$E","chars.$$","chars.isAsciiLetter","chars.isDigit","chars.$_","chars.$a","chars.$z","chars.$A","chars.$Z","chars.$EOF","chars.$u","chars.$BACKSLASH","chars.$PERIOD","chars.isWhitespace","chars.$NBSP","chars.$BAR","chars.$AMPERSAND","chars.$EQ","chars.$BANG","chars.$GT","chars.$LT","chars.$QUESTION","chars.$CARET","chars.$PERCENT","chars.$SLASH","chars.$STAR","chars.$HASH","chars.$DQ","chars.$SQ","chars.$SEMICOLON","chars.$COLON","chars.$COMMA","chars.$RBRACKET","chars.$LBRACKET","chars.$RBRACE","chars.$LBRACE","chars.$RPAREN","chars.$LPAREN","chars.$SPACE","Token"],"mappings":"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"}